// Generated by Selenium IDE
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Remote;
using OpenQA.Selenium.Support.UI;
using OpenQA.Selenium.Interactions;
using NUnit.Framework;
[TestFixture]
public class DefaultSuiteTest {
    private IWebDriver driver;
    private KlixHomePage klixHomePage;
    private SearchResultsPage klixSearchResultsPage;
    private KlixRssPage klixRssPage;
    private KlixAccountSettingsPage klixAccountSettingsPage;
    private KlixEditProfilePage klixEditProfilePage;
    private KlixArticlePage klixArticlePage;
    private KlixCategoryPage klixCategoryPage;

    [SetUp]
    public void SetUp()
    {
        driver = WebDriverManager.GetDriver();
        klixHomePage = new KlixHomePage(driver);
    }

    [TearDown]
    protected void TearDown()
    {
        WebDriverManager.QuitDriver();
    }

    [Test]
      public void KlixEkonomijaTest()
      {
          klixHomePage.Open();
          klixHomePage.OpenSearch();
          klixSearchResultsPage = klixHomePage.SearchFor("Ekonomija");
          klixArticlePage = klixSearchResultsPage.ClickFirstResult();
          string naslov = klixArticlePage.GetNewsTitle();
          Assert.That(naslov, Is.EqualTo("Njemačka ekonomija na ivici provalije: Prijeti zimska recesija zbog pada fabričkih aktivnosti"));
      }

    [Test]
      public void klixRSS() 
      {
          klixHomePage.Open();
          klixHomePage.ScrollToRss();
          klixRssPage  =  klixHomePage.OpenRSS();
          Assert.That(klixRssPage.IsXmlTagPresent(), Is.True, "XML tag nije pronađen na RSS stranici.");
      }

    [Test]
      public void KlixBrisanjeNalogaTest()
      {
          klixHomePage.Open();
          klixHomePage.Login("vvsproba", "vvsproba123");

          klixHomePage.OpenUserMenu();
          klixHomePage.OpenUserSettings();
          klixAccountSettingsPage = klixHomePage.OpenUserSettings();
          string contentBeforeClick = driver.FindElement(By.TagName("body")).Text;

          klixAccountSettingsPage.DeleteAccount();

          string contentAfterClick = driver.FindElement(By.TagName("body")).Text;

          Assert.That(contentBeforeClick, Is.Not.EqualTo(contentAfterClick), "Stranica je ostala ista nakon klika na opciju za brisanje naloga.");


          string actualMessage = klixAccountSettingsPage.GetConfirmationMessage();
          Assert.That(actualMessage, Is.EqualTo("Da li ste sigurni da želite obrisati svoj korisnički nalog?"));
      }

    [Test]
      public void klixPogresanMail() {
          klixHomePage.Open();
          klixHomePage.Login("nepoznat.korisnik@example.com", "Test123!");
          string errorMessage = klixHomePage.GetErrorMessage();
          Assert.That(errorMessage, Is.EqualTo("Greška: Korisnički nalog ne postoji."));
      }

    [Test]
      public void klixUspjesnaPrijava() {

          klixHomePage.Open();
          klixHomePage.Login("vvsproba", "vvsproba123");
          klixHomePage.OpenUserMenu();

          klixAccountSettingsPage = klixHomePage.OpenUserSettings();

          string trenutniURL = klixAccountSettingsPage.getUrl();

          Assert.That(trenutniURL, Is.EqualTo("https://www.klix.ba/profil/vvsproba"), "URL se ne podudara sa očekivanim.");
      }

    [Test]
      public void KlixVijestiTest()
      {
          klixHomePage.Open();

          klixCategoryPage = klixHomePage.OpenCategory("Vijesti");

          klixArticlePage = klixCategoryPage.OpenFirstArticle();

          string actualTitle = klixArticlePage.GetNewsTitle();
          Assert.That(actualTitle, Is.EqualTo("Sankcije im presudile: Gorica Dodik zatvara restoran nakon što je stavljen na američku crnu listu"));
      }

    [Test]
      public void KlixKomentarisanjeClankaTest()
      {
          klixHomePage.Open();
          klixHomePage.Login("vvsproba", "vvsproba123");

          klixCategoryPage = klixHomePage.OpenCategory("Magazin");

          klixArticlePage = klixCategoryPage.OpenFirstArticle();

          string expectedComment = "Test Komentar";
          klixArticlePage.AddComment(expectedComment);

          string actualComment = klixArticlePage.GetPostedComment();
          Assert.That(actualComment, Is.EqualTo(expectedComment));
      }

    [Test]
      public void KlixEditProfilaTest()
      {
          klixHomePage.Open();

          klixHomePage.Login("vvsproba", "vvsproba123");

          klixHomePage.OpenUserMenu();
          klixAccountSettingsPage = klixHomePage.OpenUserSettings();

          klixEditProfilePage = klixAccountSettingsPage.GoToEditProfile();

          string newUsername = "vvsproba2";
          klixEditProfilePage.EditUsername(newUsername);

          klixEditProfilePage.SaveChanges();

          string actualUsername = klixEditProfilePage.GetUsername();
          Assert.That(actualUsername, Is.EqualTo(newUsername));
      }

}
